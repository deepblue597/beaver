
File : 
    
    pipeline += Pipeline
    connector = Connector
    data += Data 
    preprocessors *= Preprocessors
    algorithms = Algorithms
    optimizers *= Optimizers 
    metrics = Metrics
    //TODO: Add plot 

;

Pipeline : 

    'pipeline' name = ID '{'

        ('output_topic' ':' output_topic = STRING)?  
        'data' ':' data = [Data]
        'algorithm' ':' algorithm = [Model]
        'metrics' ':' '['metrics += [Model][',']']'

    
    '}'
;

 
Data : 
    
    'data' name = ID '{'

        'input_topic' ':' input_topic=STRING 
        features = Features
        'preprocessors' ':' '[' preprocessors *= [Model][','] ']'
        plots *= Plot
    
    '}'
; 

Connector : 

    'connector' '{' 

        'connection_params' '{'
        
            connection_params += Param[',']
        
        '}'

        'kafka_params' '{'
        
            kafka_params += Param[',']
        
        '}'
        
        //'broker' ':' broker=STRING
        //'consumer_group' ':' consumer_group = STRING
        //'connection_type' ':' connection_type = STRING 
        //('username' ':' username = STRING)? 
        //('password' ':' password = STRING)? 

    '}'

;

Algorithms : 

    'algorithms' '{'
    
        models += Model 

    
    '}'
;

Preprocessors : 

    'preprocessors' '{'
    
        models += Model 

    '}'

;

Optimizers : 

    'optimizers' '{'
    
        models += Model 

    '}'

;

Metrics : 

    'metrics' '{' 
    
        models += Model 
        
    '}'

;



Model : 

    'model' name=ID '{' 

        'type' ':' type = ID 
        ('subtype' ':' subtype = ID)? 
        'name' ':'  nameR = ID
        ('params' ':' '{' 

            params += Param[',']
        '}')?   
    
    '}'
; 


Param : 

    name = ID '=' value =  ParamValue   ; 

List:
    '[' items*=ParamValue[','] ']'
;

ParamValue : NUMBER | STRING | BOOL | Reference | List | Dict;


// TODO: Learn how to raise errors in python

Dict:
    '{' itemsD*=DictItem[','] '}'
;

DictItem:
    name=STRING ':' value=DictType
;

DictType:
    NUMBER | STRING | BOOL | Dict | List 
;


Reference : value = [Model] ;



Features :
    'features' '{'
        ('keep_features' ':' '[' keep_features += ID[','] ']')?
        ('drop_features' ':' '[' drop_features += ID[','] ']')?
        ('generated_features'  ':' '{' assignments*= Assignment '}')? 
        ('target_feature' ':' target_feature = ID )?
        //FIXME: Check penguin.tx for correct implementation or preprocessing methods of River
    
    '}' 
;


Assignment: variable=ID '=' expression=Expression ';';
Expression: operands=Term (operators=PlusOrMinus operands=Term)*;
PlusOrMinus: '+' | '-';
Term: operands=Factor (operators=MulOrDiv operands=Factor)*;
MulOrDiv: '*' | '/' ;
Factor: (sign=PlusOrMinus)?  op=Operand;
Operand: op_num=NUMBER | op_id=ID | ('(' op_expr=Expression ')');

Plot : 

    'plot' name = ID '{'
    

        'type' ':' type = ID 
        ('x' ':' x = STRING)? 
        ('y' ':' y = STRING)? 
    
    
    '}'
;